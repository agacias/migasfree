[
    {
        "pk": 1,
        "model": "server.property",
        "fields": {
            "kind": "N",
            "code": "",
            "name": "ATTRIBUTES SET",
            "language": 1,
            "auto_add": true,
            "prefix": "SET",
            "enabled": true,
            "sort": "basic"
        }
    },
    {
        "pk": 2,
        "model": "server.property",
        "fields": {
            "kind": "N",
            "code": "",
            "name": "COMPUTER ID",
            "language": 1,
            "auto_add": true,
            "prefix": "CID",
            "enabled": true,
            "sort": "basic"
        }
    },
    {
        "pk": 3,
        "model": "server.property",
        "fields": {
            "kind": "N",
            "code": "",
            "name": "PLATFORM",
            "language": 1,
            "auto_add": true,
            "prefix": "PLT",
            "enabled": true,
            "sort": "basic"
        }
    },
    {
        "pk": 4,
        "model": "server.property",
        "fields": {
            "kind": "N",
            "code": "",
            "name": "PROJECT",
            "language": 1,
            "auto_add": true,
            "prefix": "PRJ",
            "enabled": true,
            "sort": "basic"
        }
    },
    {
        "pk": 5,
        "model": "server.property",
        "fields": {
            "kind": "N",
            "code": "",
            "name": "IP DIRECTION",
            "language": 1,
            "auto_add": true,
            "prefix": "IP",
            "enabled": true,
            "sort": "basic"
        }
    },
    {
        "pk": 6,
        "model": "server.property",
        "fields": {
            "kind": "N",
            "code": "",
            "name": "USER",
            "language": 1,
            "auto_add": true,
            "prefix": "USR",
            "enabled": true,
            "sort": "basic"
        }
    },
    {
        "pk": 7,
        "model": "server.property",
        "fields": {
            "kind": "N",
            "code": "import platform\nprint(platform.node())",
            "name": "MACHINE NAME",
            "language": 1,
            "auto_add": true,
            "prefix": "HST",
            "enabled": true,
            "sort": "client"
        }
    },
    {
        "pk": 8,
        "model": "server.property",
        "fields": {
            "kind": "N",
            "code": "import migasfree_client.network\nprint(migasfree_client.network.get_network_info()['net'])",
            "name": "NET",
            "language": 1,
            "auto_add": true,
            "prefix": "NET",
            "enabled": true,
            "sort": "client"
        }
    },
    {
        "pk": 9,
        "model": "server.property",
        "fields": {
            "kind": "-",
            "code": "from __future__ import print_function\nimport sys\nimport subprocess\nimport platform\n\n\n_platform = platform.system()\nif _platform == 'Linux':\n    cmd_linux = \"\"\"r=''\n      if [ `lspci -n | sed -n 1p | awk '{print $2}'` = 'Class' ]\n      then\n        dev=`lspci -n | awk '{print $4}'`\n      else\n        dev=`lspci -n | awk '{print $3}'`\n      fi\n      for l in $dev\n      do\n        n=`lspci -d $l | awk '{for (i = 2; i <= NF; ++i) print $i}' | tr \"\\n\" \" \" | sed 's/,//g'`\n        r=\"$r$l~$n,\"\n      done\n      echo $r\"\"\"\n    out, err = subprocess.Popen(cmd_linux, stdout=subprocess.PIPE, shell=True).communicate()\n    if sys.version_info.major <= 2:\n        print(out,)\n    else:\n        print(out.decode(),)\nelif _platform == 'Windows':\n    print(\"none\",)\nelse:\n    print(\"none\",)",
            "name": "DEVICE PCI",
            "language": 1,
            "auto_add": true,
            "prefix": "PCI",
            "enabled": true,
            "sort": "client"
        }
    }
]
